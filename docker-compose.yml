version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: solana_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-trader}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-trader_password}
      - POSTGRES_DB=${POSTGRES_DB:-solana-smart-traders}
      - POSTGRES_MULTIPLE_EXTENSIONS=uuid-ossp
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-trader}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: solana_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  airflow-webserver:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: solana_airflow_webserver
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER:-trader}:${POSTGRES_PASSWORD:-trader_password}@postgres/${POSTGRES_DB:-solana-smart-traders}
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${POSTGRES_USER:-trader}:${POSTGRES_PASSWORD:-trader_password}@postgres/${POSTGRES_DB:-solana-smart-traders}
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW_FERNET_KEY:-}
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=true
      - BIRDEYE_API_KEY=${BIRDEYE_API_KEY}
      - POSTGRES_USER=${POSTGRES_USER:-trader}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-trader_password}
      - POSTGRES_DB=${POSTGRES_DB:-solana-smart-traders}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/config:/opt/airflow/config
      - ./src:/opt/airflow/src
      - airflow_logs:/opt/airflow/logs
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: solana_airflow_scheduler
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER:-trader}:${POSTGRES_PASSWORD:-trader_password}@postgres/${POSTGRES_DB:-solana-smart-traders}
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${POSTGRES_USER:-trader}:${POSTGRES_PASSWORD:-trader_password}@postgres/${POSTGRES_DB:-solana-smart-traders}
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW_FERNET_KEY:-}
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - BIRDEYE_API_KEY=${BIRDEYE_API_KEY}
      - POSTGRES_USER=${POSTGRES_USER:-trader}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-trader_password}
      - POSTGRES_DB=${POSTGRES_DB:-solana-smart-traders}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/config:/opt/airflow/config
      - ./src:/opt/airflow/src
      - airflow_logs:/opt/airflow/logs
    command: scheduler

  airflow-worker:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: solana_airflow_worker
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER:-trader}:${POSTGRES_PASSWORD:-trader_password}@postgres/${POSTGRES_DB:-solana-smart-traders}
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${POSTGRES_USER:-trader}:${POSTGRES_PASSWORD:-trader_password}@postgres/${POSTGRES_DB:-solana-smart-traders}
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW_FERNET_KEY:-}
      - BIRDEYE_API_KEY=${BIRDEYE_API_KEY}
      - POSTGRES_USER=${POSTGRES_USER:-trader}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-trader_password}
      - POSTGRES_DB=${POSTGRES_DB:-solana-smart-traders}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/config:/opt/airflow/config
      - ./src:/opt/airflow/src
      - airflow_logs:/opt/airflow/logs
    command: celery worker

  airflow-init:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: solana_airflow_init
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER:-trader}:${POSTGRES_PASSWORD:-trader_password}@postgres/${POSTGRES_DB:-solana-smart-traders}
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://${POSTGRES_USER:-trader}:${POSTGRES_PASSWORD:-trader_password}@postgres/${POSTGRES_DB:-solana-smart-traders}
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW_FERNET_KEY:-}
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - _AIRFLOW_DB_MIGRATE=true
      - _AIRFLOW_WWW_USER_CREATE=true
      - _AIRFLOW_WWW_USER_USERNAME=${AIRFLOW_USERNAME:-admin}
      - _AIRFLOW_WWW_USER_PASSWORD=${AIRFLOW_PASSWORD:-admin}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/config:/opt/airflow/config
      - ./src:/opt/airflow/src
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db migrate
        airflow users create \
          --username $${_AIRFLOW_WWW_USER_USERNAME} \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com \
          --password $${_AIRFLOW_WWW_USER_PASSWORD}

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  airflow_logs:
    driver: local

networks:
  default:
    name: solana_smart_traders_network